import{R as t,r as u}from"./vendor_react-BO__ROOt.js";import{l as C,t as D}from"./vendor_tfjs-CCmWBo39.js";import"./vendor_misc-CyiVgjSS.js";import{l as P}from"./vendor_socketio-C4wxTqAP.js";import{B as d,i as w,m as R,O as j,r as A,d as L,t as $,l as x}from"./vendor_rxjs-SaEufJVe.js";function y({children:n,className:e=""}){return t.createElement("div",{className:`bg-white shadow rounded border border-gray-200 ${e}`},n)}function b({children:n,className:e=""}){return t.createElement("div",{className:`p-4 ${e}`},n)}function E({value:n,className:e=""}){return t.createElement("div",{className:`w-full bg-gray-300 rounded overflow-hidden ${e}`},t.createElement("div",{style:{width:`${n}%`},className:"bg-blue-600 h-2"}))}function O(n){return t.createElement("svg",{...n,fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",viewBox:"0 0 24 24",className:"text-yellow-500 mr-2 h-4 w-4","aria-hidden":"true"},t.createElement("path",{d:"M10.29 3.86L1.82 18a2 2 0 001.71 3h16.94a2 2 0 001.71-3L13.71 3.86a2 2 0 00-3.42 0z"}),t.createElement("line",{x1:12,y1:9,x2:12,y2:13}),t.createElement("line",{x1:12,y1:17,x2:12,y2:17}))}function H(n){return t.createElement("svg",{...n,fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",viewBox:"0 0 24 24",className:"text-green-500 h-5 w-5","aria-hidden":"true"},t.createElement("path",{d:"M9 12l2 2 4-4"}),t.createElement("circle",{cx:12,cy:12,r:10}))}var z={};class I{constructor(){this.metricsSubject=new d(this.getInitialMetrics()),this.connectionStatus=new d("disconnected"),this.maxReconnectAttempts=5,this.reconnectAttempts=0,this.socket=this.initializeSocket(),this.setupSocketHandlers()}initializeSocket(){return P(z.REACT_APP_WS_URL||"ws://localhost:3001",{reconnection:!0,reconnectionAttempts:this.maxReconnectAttempts,reconnectionDelay:1e3,timeout:5e3,transports:["websocket"]})}setupSocketHandlers(){this.socket.on("connect",()=>{this.connectionStatus.next("connected"),this.reconnectAttempts=0,console.log("Connected to metrics server")}),this.socket.on("disconnect",()=>{this.connectionStatus.next("disconnected"),this.handleDisconnect()}),this.socket.on("metrics",e=>{this.metricsSubject.next(e)}),this.socket.on("error",e=>{this.connectionStatus.next("error"),console.error("Socket error:",e)})}handleDisconnect(){this.reconnectAttempts++,this.reconnectAttempts<=this.maxReconnectAttempts?(console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})`),setTimeout(()=>{this.socket.connect()},1e3)):console.error("Max reconnect attempts reached")}setupMetricsCollection(){w(1e3).pipe(R(()=>this.collectSystemMetrics().pipe(A(e=>e.pipe(L(1e3),$(this.maxReconnectAttempts)))))).subscribe({next:e=>this.metricsSubject.next(e),error:e=>{console.error("Metrics collection error:",e),this.connectionStatus.next("error")}})}collectSystemMetrics(){return new j(e=>{const s=a=>{e.next(a),e.complete()};return this.socket.once("systemMetrics",s),this.socket.emit("requestSystemMetrics"),()=>{this.socket.off("systemMetrics",s)}})}getMetricsStream(){return this.metricsSubject.asObservable()}getConnectionStatus(){return this.connectionStatus.asObservable()}sendCommand(e,s){return new Promise((a,r)=>{this.socket.emit("command",{type:e,payload:s},o=>{o.success?a(o.data):r(new Error(o.error))})})}getInitialMetrics(){return{cpu:0,memory:0,network:0,errorRate:0,throughput:0,latency:0,uptime:0,nodes:0,status:"unknown",statusLevel:"healthy",health:100,nlp:{throughput:0,models:0,latency:0,health:100,status:"healthy"},emotions:{sentimentAccuracy:0,emotionalRange:0,health:100,status:"healthy"},prediction:{predictionAccuracy:0,modelsTrained:0,health:100,status:"healthy"},control:{activeProcesses:0,systemLoad:0,alerts:0,health:100,status:"healthy"},performance:{cpu:{usage:0,temperature:0,cores:[]},memory:{total:0,used:0,free:0,cached:0},storage:{total:0,used:0,free:0,readSpeed:0,writeSpeed:0}},selfImprovement:{lastOptimization:new Date,optimizationScore:100,learningRate:.001,adaptationLevel:0}}}}const i=new I;class F{constructor(){this.healthSubject=new d({overall:100,components:{},lastCheck:new Date,issues:[]}),this.alertsSubject=new d([]),this.feedbackSubject=new d("Idle"),this.diagnosticsHistory=new d([]),this.mlModel=null,this.initializeMonitoring(),this.setupAutomaticRepair(),this.initializeMLModel()}initializeMonitoring(){w(6e4).subscribe(async()=>{const e=await this.runDiagnostics();this.updateSystemHealth(e),this.handleCriticalIssues(e)})}setupAutomaticRepair(){w(3e5).subscribe(async()=>{const e=this.healthSubject.value;e.issues.length>0&&await this.performAutoRepair(e.issues)})}async runDiagnostics(){this.feedbackSubject.next("Running diagnostics...");const e=await Promise.all([this.checkConnectivity(),this.checkPerformance(),this.checkStorage(),this.checkModules(),this.checkML(),this.checkSecurity()]),s=this.analyzeResults(e);return s.issues.length>0&&await this.autoRepair(s.issues),this.diagnosticsHistory.next([...this.diagnosticsHistory.value,{timestamp:new Date,results:e}]),this.feedbackSubject.next("Diagnostics complete"),e}async checkConnectivity(){try{return await new Promise(e=>setTimeout(e,100)),{status:"success",message:"Connectivity stable",details:{ping:42},timestamp:Date.now()}}catch(e){return{status:"error",message:"Connectivity check failed",details:e,timestamp:Date.now()}}}async checkPerformance(){try{const e=await x(i.getMetricsStream()),s=this.calculatePerformanceScore(e);return{status:s>80?"success":s>60?"warning":"error",message:`Performance score: ${s.toFixed(1)}`,details:{metrics:e,score:s},timestamp:Date.now()}}catch(e){return{status:"error",message:"Performance check failed",details:e,timestamp:Date.now()}}}calculatePerformanceScore(e){return e.cpu*.2+e.memory*.2+e.network*.2+e.throughput*.2+(100-e.errorRate*10)*.2}async checkStorage(){try{return await new Promise(e=>setTimeout(e,50)),{status:"success",message:"Storage OK",details:{freeSpace:"85%"},timestamp:Date.now()}}catch(e){return{status:"error",message:"Storage check failed",details:e,timestamp:Date.now()}}}async checkModules(){try{return await new Promise(e=>setTimeout(e,75)),{status:"success",message:"Modules operating normally",details:{loadedModules:42},timestamp:Date.now()}}catch(e){return{status:"error",message:"Module check failed",details:e,timestamp:Date.now()}}}async checkML(){try{return this.mlModel?(await new Promise(e=>setTimeout(e,200)),{status:"success",message:"ML diagnostics passed",details:{accuracy:.92},timestamp:Date.now()}):{status:"warning",message:"ML model not loaded",details:{},timestamp:Date.now()}}catch(e){return{status:"error",message:"ML diagnostics failed",details:e,timestamp:Date.now()}}}async checkSecurity(){try{return await new Promise(e=>setTimeout(e,150)),{status:"success",message:"Security checks clean",details:{threatsDetected:0},timestamp:Date.now()}}catch(e){return{status:"error",message:"Security check failed",details:e,timestamp:Date.now()}}}analyzeResults(e){return{issues:e.filter(a=>a.status!=="success").map(a=>`${a.message} (${a.status})`)}}async autoRepair(e){for(const s of e)try{await this.attemptRepair(s),console.log(`Auto-repaired issue: ${s}`)}catch(a){console.error(`Failed to repair issue: ${s}`,a)}}async performAutoRepair(e){this.feedbackSubject.next("Performing auto-repair...");for(const s of e)try{await this.repairIssue(s),this.logRepairSuccess(s)}catch(a){this.logRepairFailure(s,a),await this.escalateIssue(s,a)}this.feedbackSubject.next("Auto-repair completed")}async attemptRepair(e){const a={"high-cpu":async()=>{await i.sendCommand("optimize",{target:"cpu"})},"memory-leak":async()=>{await i.sendCommand("optimize",{target:"memory"})},"high-latency":async()=>{await i.sendCommand("optimize",{target:"network"})},connectivity:async()=>{await i.sendCommand("reconnect",{})}}[e.toLowerCase().split(" ")[0]];if(a)await a();else throw new Error(`No repair strategy for issue: ${e}`)}async repairIssue(e){await this.attemptRepair(e)}async escalateIssue(e,s){console.warn(`Escalating issue: ${e}`,s),this.alertsSubject.next([...this.alertsSubject.value,`Failed to repair: ${e}. Error: ${s instanceof Error?s.message:String(s)}`])}updateSystemHealth(e){const s=e.filter(r=>r.status!=="success").map(r=>r.message),a=100-s.length*15;this.healthSubject.next({overall:Math.max(0,a),components:{cpu:e.find(r=>r.message.includes("CPU"))?.status==="success"?100:50,memory:e.find(r=>r.message.includes("Memory"))?.status==="success"?100:50,network:e.find(r=>r.message.includes("Network"))?.status==="success"?100:50},lastCheck:new Date,issues:s}),s.length>0&&this.alertsSubject.next(s)}handleCriticalIssues(e){const s=e.filter(a=>a.status==="error");s.length>0&&(this.alertsSubject.next(s.map(a=>a.message)),this.performAutoRepair(s.map(a=>a.message)))}logRepairSuccess(e){console.log(`Successfully repaired issue: ${e}`),this.feedbackSubject.next(`Repaired: ${e}`)}logRepairFailure(e,s){console.error(`Repair failed for issue: ${e}`,s),this.feedbackSubject.next(`Failed to repair: ${e}`)}async initializeMLModel(){try{this.mlModel=await C("/models/diagnostics-model.json"),this.startPredictiveMaintenance()}catch(e){console.error("Failed to load ML model:",e),this.feedbackSubject.next("ML model loading failed")}}startPredictiveMaintenance(){w(3e5).subscribe(async()=>{try{const e=await this.predictSystemIssues();e.risk>.7&&await this.preventiveMaintenance(e.issues)}catch(e){console.error("Predictive maintenance error:",e)}})}async predictSystemIssues(){if(!this.mlModel)throw new Error("ML model not loaded");try{const e=await x(i.getMetricsStream()),s=D([[e.cpu,e.memory,e.network,e.throughput,e.errorRate]]),a=this.mlModel.predict(s),r=await a.data();s.dispose(),a.dispose();const o=r[0],l=[];return r[1]>.5&&l.push("CPU overload"),r[2]>.5&&l.push("Memory leak"),r[3]>.5&&l.push("Network congestion"),{risk:o,issues:l}}catch(e){throw console.error("Prediction failed:",e),e}}async preventiveMaintenance(e){this.feedbackSubject.next("Performing preventive maintenance...");const s={"CPU overload":async()=>{await i.sendCommand("throttle",{target:"cpu",level:.8})},"Memory leak":async()=>{await i.sendCommand("restart",{component:"memory-manager"})},"Network congestion":async()=>{await i.sendCommand("optimize",{target:"network",qos:"high"})}};for(const a of e)try{const r=s[a];r&&(await r(),console.log(`Preventive action taken for: ${a}`))}catch(r){console.error(`Preventive action failed for ${a}:`,r)}this.feedbackSubject.next("Preventive maintenance completed")}getHealthObservable(){return this.healthSubject.asObservable()}getAlertsObservable(){return this.alertsSubject.asObservable()}getFeedbackObservable(){return this.feedbackSubject.asObservable()}getDiagnosticsHistory(){return this.diagnosticsHistory.asObservable()}async forceDiagnostics(){return this.runDiagnostics()}async forceRepair(){const e=this.healthSubject.value;return e.issues.length>0?this.performAutoRepair(e.issues):Promise.resolve()}}const f=new F,S=10;function q(){const[n,e]=u.useState(null),[s,a]=u.useState([]),[r,o]=u.useState("Idle"),[l,M]=u.useState([]),[h,k]=u.useState(0);u.useEffect(()=>{const c=[f.getHealthObservable().subscribe(e),f.getAlertsObservable().subscribe(a),f.getFeedbackObservable().subscribe(o),f.getDiagnosticsHistory().subscribe(M)];return()=>c.forEach(m=>m.unsubscribe())},[]);const v=l.slice(h*S,(h+1)*S),p=Math.ceil(l.length/S);return t.createElement("div",{className:"p-6 grid grid-cols-1 md:grid-cols-2 gap-6"},t.createElement(y,{className:"col-span-1 md:col-span-2"},t.createElement(b,null,t.createElement("h2",{className:"text-xl font-bold mb-2"},"System Health"),n?t.createElement(t.Fragment,null,t.createElement("p",{className:"mb-1"},"Overall: ",n.overall,"%"),t.createElement(E,{value:n.overall,className:"mb-3"}),t.createElement("div",{className:"grid grid-cols-3 gap-2"},Object.entries(n.components).map(([c,m])=>t.createElement("div",{key:c,className:"text-sm"},t.createElement("p",{className:"font-medium capitalize"},c),t.createElement(E,{value:m})))),t.createElement("p",{className:"mt-3 text-xs text-muted-foreground"},"Last Checked: ",new Date(n.lastCheck).toLocaleString())):t.createElement("p",null,"Loading system health..."))),t.createElement(y,null,t.createElement(b,null,t.createElement("h2",{className:"text-lg font-bold mb-2"},"Current Alerts"),s.length>0?t.createElement("ul",{className:"space-y-1"},s.map((c,m)=>t.createElement("li",{key:m,className:"flex items-center text-sm"},t.createElement(O,null),c))):t.createElement("p",{className:"text-sm text-muted-foreground"},"No current alerts"))),t.createElement(y,null,t.createElement(b,null,t.createElement("h2",{className:"text-lg font-bold mb-2"},"Feedback"),t.createElement("div",{className:"flex items-center gap-2"},t.createElement(H,null),t.createElement("span",{className:"text-sm"},r)))),t.createElement(y,{className:"col-span-1 md:col-span-2"},t.createElement(b,null,t.createElement("h2",{className:"text-lg font-bold mb-2"},"Diagnostics History"),t.createElement("div",{className:"overflow-auto max-h-64 text-sm"},v.length>0?t.createElement("ul",{className:"space-y-2"},v.map((c,m)=>t.createElement("li",{key:m,className:"border-b pb-2"},t.createElement("p",{className:"text-muted-foreground text-xs"},new Date(c.timestamp).toLocaleString()),t.createElement("ul",{className:"pl-4 list-disc"},c.results.map((g,N)=>t.createElement("li",{key:N,className:`text-sm ${g.status==="error"?"text-red-600":g.status==="warning"?"text-yellow-600":"text-green-600"}`},g.message," — ",g.status.toUpperCase())))))):t.createElement("p",null,"No diagnostics history available")),p>1&&t.createElement("div",{className:"flex justify-end items-center gap-2 mt-2"},t.createElement("button",{onClick:()=>k(c=>Math.max(c-1,0)),className:"text-sm px-2 py-1 border rounded disabled:opacity-50",disabled:h===0},"Previous"),t.createElement("span",{className:"text-xs text-muted-foreground"},"Page ",h+1," of ",p),t.createElement("button",{onClick:()=>k(c=>Math.min(c+1,p-1)),className:"text-sm px-2 py-1 border rounded disabled:opacity-50",disabled:h>=p-1},"Next")))))}export{q as default};
//# sourceMappingURL=CyberDashboard-BiDkb_IL.js.map
