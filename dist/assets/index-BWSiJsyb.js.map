{"version":3,"mappings":";60BAYO,MAAMA,UAAsBC,WAAwB,CACzD,YAAYC,EAAc,CACxB,MAAMA,CAAK,EACX,KAAK,MAAQ,CAAE,SAAU,GAC3B,CAEA,OAAO,yBAAyBC,EAAc,CAC5C,MAAO,CAAE,SAAU,GAAM,MAAAA,CAAA,CAC3B,CAEA,kBAAkBA,EAAcC,EAAsB,CACpD,QAAQ,MAAM,kBAAmBD,EAAOC,CAAS,CACnD,CAEA,QAAS,CACP,OAAI,KAAK,MAAM,yBAEV,OAAI,UAAU,gCACbC,EAAA,cAAC,MAAG,UAAU,sBAAqB,uBAAqB,EACxDA,EAAA,cAAC,OAAI,UAAU,gBAAgB,KAAK,MAAM,OAAO,OAAQ,CAC3D,EAIG,KAAK,MAAM,QACpB,CACF,CCjCA,MAAMC,EAAiBD,EAAM,KAAK,IAAAE,EAAA,IAAM,OAAO,8BAA6B,iCAAC,EACvEC,EAAgBH,EAAM,KAAK,IAAAE,EAAA,IAAM,OAAO,6BAA4B,2BAAC,EAErEE,EAAS,IACbJ,EAAA,cAAC,OAAI,UAAU,mEAAkE,YAEjF,EAGF,SAAwBK,GAAM,CAC5B,OACEL,EAAA,cAACM,EAAA,KACCN,EAAA,cAACL,EAAA,KACCK,EAAA,cAACO,YAAS,SAAUP,EAAA,cAACI,EAAA,IAAO,GAC1BJ,EAAA,cAACQ,EAAA,qBACEC,EAAA,CAAM,KAAK,IAAI,QAAST,EAAA,cAACU,EAAA,CAAS,GAAG,aAAa,QAAO,GAAC,EAAI,EAC/DV,EAAA,cAACS,EAAA,CAAM,KAAK,aAAa,QAAST,EAAA,cAACC,EAAA,IAAe,EAAI,EACtDD,EAAA,cAACS,EAAA,CAAM,KAAK,YAAY,QAAST,EAAA,cAACG,EAAA,IAAc,EAAI,EACpDH,EAAA,cAACS,EAAA,CAAM,KAAK,IAAI,QAAST,EAAA,cAAC,WAAI,sBAAoB,EAAQ,CAC5D,CACF,CACF,CACF,CAEJ,CCxBAW,EAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,uBACnDX,EAAM,WAAN,KACCA,EAAA,cAACK,MAAI,CACP,CACF","names":["ErrorBoundary","Component","props","error","errorInfo","React","CyberDashboard","__vitePreload","CyberTerminal","Loader","App","Router","Suspense","Routes","Route","Navigate","ReactDOM"],"ignoreList":[],"sources":["../../src/components/ErrorBoundary.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["// src/components/ErrorBoundary.tsx\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"p-8 text-center text-red-500\">\n          <h1 className=\"text-2xl font-bold\">Something went wrong.</h1>\n          <pre className=\"mt-4 text-sm\">{this.state.error?.message}</pre>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","// src/App.tsx\nimport React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { ErrorBoundary } from './components/ErrorBoundary'; // âœ… Correct import\n\nconst CyberDashboard = React.lazy(() => import('./components/CyberDashboard'));\nconst CyberTerminal = React.lazy(() => import('./components/CyberTerminal'));\n\nconst Loader = () => (\n  <div className=\"flex items-center justify-center h-screen text-lg font-semibold\">\n    Loading...\n  </div>\n);\n\nexport default function App() {\n  return (\n    <Router>\n      <ErrorBoundary>\n        <Suspense fallback={<Loader />}>\n          <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n            <Route path=\"/dashboard\" element={<CyberDashboard />} />\n            <Route path=\"/terminal\" element={<CyberTerminal />} />\n            <Route path=\"*\" element={<div>404 - Page Not Found</div>} />\n          </Routes>\n        </Suspense>\n      </ErrorBoundary>\n    </Router>\n  );\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n"],"file":"assets/index-BWSiJsyb.js"}