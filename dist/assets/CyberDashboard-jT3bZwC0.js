import{R as s,r as u,T as C,C as D}from"./vendor_react-N6Aa4LUN.js";import{l as P,t as R}from"./vendor_tfjs-Co5av_hA.js";import"./vendor_misc-B0pSSJAo.js";import{l as A}from"./vendor_socketio-DMJhnVt1.js";import{B as h,i as w,m as j,O as $,r as L,d as O,t as H,l as x}from"./vendor_rxjs-C_tsnZEI.js";function b({children:c,className:e=""}){return s.createElement("div",{className:`bg-white shadow rounded border border-gray-200 ${e}`},c)}function y({children:c,className:e=""}){return s.createElement("div",{className:`p-4 ${e}`},c)}function E({value:c,className:e=""}){return s.createElement("div",{className:`w-full bg-gray-300 rounded overflow-hidden ${e}`},s.createElement("div",{style:{width:`${c}%`},className:"bg-blue-600 h-2"}))}var z={};class I{constructor(){this.metricsSubject=new h(this.getInitialMetrics()),this.connectionStatus=new h("disconnected"),this.maxReconnectAttempts=5,this.reconnectAttempts=0,this.socket=this.initializeSocket(),this.setupSocketHandlers()}initializeSocket(){return A(z.REACT_APP_WS_URL||"ws://localhost:3001",{reconnection:!0,reconnectionAttempts:this.maxReconnectAttempts,reconnectionDelay:1e3,timeout:5e3,transports:["websocket"]})}setupSocketHandlers(){this.socket.on("connect",()=>{this.connectionStatus.next("connected"),this.reconnectAttempts=0,console.log("Connected to metrics server")}),this.socket.on("disconnect",()=>{this.connectionStatus.next("disconnected"),this.handleDisconnect()}),this.socket.on("metrics",e=>{this.metricsSubject.next(e)}),this.socket.on("error",e=>{this.connectionStatus.next("error"),console.error("Socket error:",e)})}handleDisconnect(){this.reconnectAttempts++,this.reconnectAttempts<=this.maxReconnectAttempts?(console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})`),setTimeout(()=>{this.socket.connect()},1e3)):console.error("Max reconnect attempts reached")}setupMetricsCollection(){w(1e3).pipe(j(()=>this.collectSystemMetrics().pipe(L(e=>e.pipe(O(1e3),H(this.maxReconnectAttempts)))))).subscribe({next:e=>this.metricsSubject.next(e),error:e=>{console.error("Metrics collection error:",e),this.connectionStatus.next("error")}})}collectSystemMetrics(){return new $(e=>{const t=a=>{e.next(a),e.complete()};return this.socket.once("systemMetrics",t),this.socket.emit("requestSystemMetrics"),()=>{this.socket.off("systemMetrics",t)}})}getMetricsStream(){return this.metricsSubject.asObservable()}getConnectionStatus(){return this.connectionStatus.asObservable()}sendCommand(e,t){return new Promise((a,r)=>{this.socket.emit("command",{type:e,payload:t},o=>{o.success?a(o.data):r(new Error(o.error))})})}getInitialMetrics(){return{cpu:0,memory:0,network:0,errorRate:0,throughput:0,latency:0,uptime:0,nodes:0,status:"unknown",statusLevel:"healthy",health:100,nlp:{throughput:0,models:0,latency:0,health:100,status:"healthy"},emotions:{sentimentAccuracy:0,emotionalRange:0,health:100,status:"healthy"},prediction:{predictionAccuracy:0,modelsTrained:0,health:100,status:"healthy"},control:{activeProcesses:0,systemLoad:0,alerts:0,health:100,status:"healthy"},performance:{cpu:{usage:0,temperature:0,cores:[]},memory:{total:0,used:0,free:0,cached:0},storage:{total:0,used:0,free:0,readSpeed:0,writeSpeed:0}},selfImprovement:{lastOptimization:new Date,optimizationScore:100,learningRate:.001,adaptationLevel:0}}}}const i=new I;class F{constructor(){this.healthSubject=new h({overall:100,components:{},lastCheck:new Date,issues:[]}),this.alertsSubject=new h([]),this.feedbackSubject=new h("Idle"),this.diagnosticsHistory=new h([]),this.mlModel=null,this.initializeMonitoring(),this.setupAutomaticRepair(),this.initializeMLModel()}initializeMonitoring(){w(6e4).subscribe(async()=>{const e=await this.runDiagnostics();this.updateSystemHealth(e),this.handleCriticalIssues(e)})}setupAutomaticRepair(){w(3e5).subscribe(async()=>{const e=this.healthSubject.value;e.issues.length>0&&await this.performAutoRepair(e.issues)})}async runDiagnostics(){this.feedbackSubject.next("Running diagnostics...");const e=await Promise.all([this.checkConnectivity(),this.checkPerformance(),this.checkStorage(),this.checkModules(),this.checkML(),this.checkSecurity()]),t=this.analyzeResults(e);return t.issues.length>0&&await this.autoRepair(t.issues),this.diagnosticsHistory.next([...this.diagnosticsHistory.value,{timestamp:new Date,results:e}]),this.feedbackSubject.next("Diagnostics complete"),e}async checkConnectivity(){try{return await new Promise(e=>setTimeout(e,100)),{status:"success",message:"Connectivity stable",details:{ping:42},timestamp:Date.now()}}catch(e){return{status:"error",message:"Connectivity check failed",details:e,timestamp:Date.now()}}}async checkPerformance(){try{const e=await x(i.getMetricsStream()),t=this.calculatePerformanceScore(e);return{status:t>80?"success":t>60?"warning":"error",message:`Performance score: ${t.toFixed(1)}`,details:{metrics:e,score:t},timestamp:Date.now()}}catch(e){return{status:"error",message:"Performance check failed",details:e,timestamp:Date.now()}}}calculatePerformanceScore(e){return e.cpu*.2+e.memory*.2+e.network*.2+e.throughput*.2+(100-e.errorRate*10)*.2}async checkStorage(){try{return await new Promise(e=>setTimeout(e,50)),{status:"success",message:"Storage OK",details:{freeSpace:"85%"},timestamp:Date.now()}}catch(e){return{status:"error",message:"Storage check failed",details:e,timestamp:Date.now()}}}async checkModules(){try{return await new Promise(e=>setTimeout(e,75)),{status:"success",message:"Modules operating normally",details:{loadedModules:42},timestamp:Date.now()}}catch(e){return{status:"error",message:"Module check failed",details:e,timestamp:Date.now()}}}async checkML(){try{return this.mlModel?(await new Promise(e=>setTimeout(e,200)),{status:"success",message:"ML diagnostics passed",details:{accuracy:.92},timestamp:Date.now()}):{status:"warning",message:"ML model not loaded",details:{},timestamp:Date.now()}}catch(e){return{status:"error",message:"ML diagnostics failed",details:e,timestamp:Date.now()}}}async checkSecurity(){try{return await new Promise(e=>setTimeout(e,150)),{status:"success",message:"Security checks clean",details:{threatsDetected:0},timestamp:Date.now()}}catch(e){return{status:"error",message:"Security check failed",details:e,timestamp:Date.now()}}}analyzeResults(e){return{issues:e.filter(a=>a.status!=="success").map(a=>`${a.message} (${a.status})`)}}async autoRepair(e){for(const t of e)try{await this.attemptRepair(t),console.log(`Auto-repaired issue: ${t}`)}catch(a){console.error(`Failed to repair issue: ${t}`,a)}}async performAutoRepair(e){this.feedbackSubject.next("Performing auto-repair...");for(const t of e)try{await this.repairIssue(t),this.logRepairSuccess(t)}catch(a){this.logRepairFailure(t,a),await this.escalateIssue(t,a)}this.feedbackSubject.next("Auto-repair completed")}async attemptRepair(e){const a={"high-cpu":async()=>{await i.sendCommand("optimize",{target:"cpu"})},"memory-leak":async()=>{await i.sendCommand("optimize",{target:"memory"})},"high-latency":async()=>{await i.sendCommand("optimize",{target:"network"})},connectivity:async()=>{await i.sendCommand("reconnect",{})}}[e.toLowerCase().split(" ")[0]];if(a)await a();else throw new Error(`No repair strategy for issue: ${e}`)}async repairIssue(e){await this.attemptRepair(e)}async escalateIssue(e,t){console.warn(`Escalating issue: ${e}`,t),this.alertsSubject.next([...this.alertsSubject.value,`Failed to repair: ${e}. Error: ${t instanceof Error?t.message:String(t)}`])}updateSystemHealth(e){const t=e.filter(r=>r.status!=="success").map(r=>r.message),a=100-t.length*15;this.healthSubject.next({overall:Math.max(0,a),components:{cpu:e.find(r=>r.message.includes("CPU"))?.status==="success"?100:50,memory:e.find(r=>r.message.includes("Memory"))?.status==="success"?100:50,network:e.find(r=>r.message.includes("Network"))?.status==="success"?100:50},lastCheck:new Date,issues:t}),t.length>0&&this.alertsSubject.next(t)}handleCriticalIssues(e){const t=e.filter(a=>a.status==="error");t.length>0&&(this.alertsSubject.next(t.map(a=>a.message)),this.performAutoRepair(t.map(a=>a.message)))}logRepairSuccess(e){console.log(`Successfully repaired issue: ${e}`),this.feedbackSubject.next(`Repaired: ${e}`)}logRepairFailure(e,t){console.error(`Repair failed for issue: ${e}`,t),this.feedbackSubject.next(`Failed to repair: ${e}`)}async initializeMLModel(){try{this.mlModel=await P("/models/diagnostics-model.json"),this.startPredictiveMaintenance()}catch(e){console.error("Failed to load ML model:",e),this.feedbackSubject.next("ML model loading failed")}}startPredictiveMaintenance(){w(3e5).subscribe(async()=>{try{const e=await this.predictSystemIssues();e.risk>.7&&await this.preventiveMaintenance(e.issues)}catch(e){console.error("Predictive maintenance error:",e)}})}async predictSystemIssues(){if(!this.mlModel)throw new Error("ML model not loaded");try{const e=await x(i.getMetricsStream()),t=R([[e.cpu,e.memory,e.network,e.throughput,e.errorRate]]),a=this.mlModel.predict(t),r=await a.data();t.dispose(),a.dispose();const o=r[0],l=[];return r[1]>.5&&l.push("CPU overload"),r[2]>.5&&l.push("Memory leak"),r[3]>.5&&l.push("Network congestion"),{risk:o,issues:l}}catch(e){throw console.error("Prediction failed:",e),e}}async preventiveMaintenance(e){this.feedbackSubject.next("Performing preventive maintenance...");const t={"CPU overload":async()=>{await i.sendCommand("throttle",{target:"cpu",level:.8})},"Memory leak":async()=>{await i.sendCommand("restart",{component:"memory-manager"})},"Network congestion":async()=>{await i.sendCommand("optimize",{target:"network",qos:"high"})}};for(const a of e)try{const r=t[a];r&&(await r(),console.log(`Preventive action taken for: ${a}`))}catch(r){console.error(`Preventive action failed for ${a}:`,r)}this.feedbackSubject.next("Preventive maintenance completed")}getHealthObservable(){return this.healthSubject.asObservable()}getAlertsObservable(){return this.alertsSubject.asObservable()}getFeedbackObservable(){return this.feedbackSubject.asObservable()}getDiagnosticsHistory(){return this.diagnosticsHistory.asObservable()}async forceDiagnostics(){return this.runDiagnostics()}async forceRepair(){const e=this.healthSubject.value;return e.issues.length>0?this.performAutoRepair(e.issues):Promise.resolve()}}const f=new F,S=10;function W(){const[c,e]=u.useState(null),[t,a]=u.useState([]),[r,o]=u.useState("Idle"),[l,M]=u.useState([]),[d,k]=u.useState(0);u.useEffect(()=>{const n=[f.getHealthObservable().subscribe(e),f.getAlertsObservable().subscribe(a),f.getFeedbackObservable().subscribe(o),f.getDiagnosticsHistory().subscribe(M)];return()=>n.forEach(m=>m.unsubscribe())},[]);const v=l.slice(d*S,(d+1)*S),p=Math.ceil(l.length/S);return s.createElement("div",{className:"p-6 grid grid-cols-1 md:grid-cols-2 gap-6"},s.createElement(b,{className:"col-span-1 md:col-span-2"},s.createElement(y,null,s.createElement("h2",{className:"text-xl font-bold mb-2"},"System Health"),c?s.createElement(s.Fragment,null,s.createElement("p",{className:"mb-1"},"Overall: ",c.overall,"%"),s.createElement(E,{value:c.overall,className:"mb-3"}),s.createElement("div",{className:"grid grid-cols-3 gap-2"},Object.entries(c.components).map(([n,m])=>s.createElement("div",{key:n,className:"text-sm"},s.createElement("p",{className:"font-medium capitalize"},n),s.createElement(E,{value:m})))),s.createElement("p",{className:"mt-3 text-xs text-muted-foreground"},"Last Checked: ",new Date(c.lastCheck).toLocaleString())):s.createElement("p",null,"Loading system health..."))),s.createElement(b,null,s.createElement(y,null,s.createElement("h2",{className:"text-lg font-bold mb-2"},"Current Alerts"),t.length>0?s.createElement("ul",{className:"space-y-1"},t.map((n,m)=>s.createElement("li",{key:m,className:"flex items-center text-sm gap-2"},s.createElement(C,{className:"text-yellow-600 w-4 h-4"}),n))):s.createElement("p",{className:"text-sm text-muted-foreground"},"No current alerts"))),s.createElement(b,null,s.createElement(y,null,s.createElement("h2",{className:"text-lg font-bold mb-2"},"Feedback"),s.createElement("div",{className:"flex items-center gap-2"},s.createElement(D,{className:"text-green-600 w-4 h-4"}),s.createElement("span",{className:"text-sm"},r)))),s.createElement(b,{className:"col-span-1 md:col-span-2"},s.createElement(y,null,s.createElement("h2",{className:"text-lg font-bold mb-2"},"Diagnostics History"),s.createElement("div",{className:"overflow-auto max-h-64 text-sm"},v.length>0?s.createElement("ul",{className:"space-y-2"},v.map((n,m)=>s.createElement("li",{key:m,className:"border-b pb-2"},s.createElement("p",{className:"text-muted-foreground text-xs"},new Date(n.timestamp).toLocaleString()),s.createElement("ul",{className:"pl-4 list-disc"},n.results.map((g,N)=>s.createElement("li",{key:N,className:`text-sm ${g.status==="error"?"text-red-600":g.status==="warning"?"text-yellow-600":"text-green-600"}`},g.message," — ",g.status.toUpperCase())))))):s.createElement("p",null,"No diagnostics history available")),p>1&&s.createElement("div",{className:"flex justify-end items-center gap-2 mt-2"},s.createElement("button",{onClick:()=>k(n=>Math.max(n-1,0)),className:"text-sm px-2 py-1 border rounded disabled:opacity-50",disabled:d===0},"Previous"),s.createElement("span",{className:"text-xs text-muted-foreground"},"Page ",d+1," of ",p),s.createElement("button",{onClick:()=>k(n=>Math.min(n+1,p-1)),className:"text-sm px-2 py-1 border rounded disabled:opacity-50",disabled:d>=p-1},"Next")))))}export{W as default};
//# sourceMappingURL=CyberDashboard-jT3bZwC0.js.map
