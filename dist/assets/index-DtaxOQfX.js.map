{"version":3,"mappings":";u4DAMO,MAAMA,UAAsBC,WAAwB,CAApD,kCACL,WAAe,CAAE,SAAU,GAAM,CAEjC,OAAO,yBAAyBC,EAAmB,CACjD,MAAO,CAAE,SAAU,GAAM,MAAOA,CAAA,CAClC,CAEA,kBAAkBC,EAAcC,EAAiB,CAC/C,QAAQ,MAAM,wBAAyBD,EAAOC,CAAI,CACpD,CAEA,QAAS,CACP,OAAI,KAAK,MAAM,SAEXC,EAAA,cAAC,OAAI,UAAU,0EACZ,WACCA,EAAA,cAAC,MAAG,UAAU,sBAAqB,uBAAqB,EACxDA,EAAA,cAAC,KAAE,UAAU,QAAQ,KAAK,MAAM,OAAO,OAAQ,CACjD,CACF,EAGG,KAAK,MAAM,QACpB,CACF,CCzBA,MAAMC,EAAiBD,EAAM,KAAK,IAAAE,EAAA,IAAM,OAAO,8BAA6B,iCAAC,EACvEC,EAAiBH,EAAM,KAAK,IAAAE,EAAA,IAAM,OAAO,6BAA4B,2BAAC,EAEtEE,EAAS,IACbJ,EAAA,cAAC,OAAI,UAAU,mEAAkE,YAEjF,EAGF,SAAwBK,GAAM,CAC5B,OACEL,EAAA,cAACM,EAAA,KACCN,EAAA,cAACL,EAAA,KACCK,EAAA,cAACO,WAAA,CAAS,SAAUP,EAAA,cAACI,EAAA,IAAO,GAC1BJ,EAAA,cAACQ,EAAA,KACCR,EAAA,cAACS,GAAM,KAAK,IAAI,QAAST,EAAA,cAACU,EAAA,CAAS,GAAG,aAAa,QAAO,GAAC,EAAI,EAC/DV,EAAA,cAACS,EAAA,CAAM,KAAK,aAAa,QAAST,EAAA,cAACC,EAAA,IAAe,EAAI,EACtDD,EAAA,cAACS,EAAA,CAAM,KAAK,YAAa,QAAST,EAAA,cAACG,EAAA,IAAc,EAAI,EACrDH,EAAA,cAACS,EAAA,CAAM,KAAK,IAAI,QAAST,EAAA,cAAC,OAAI,UAAU,OAAM,iBAAe,EAAQ,CACvE,CACF,CACF,CACF,CAEJ,CCxBAW,EAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,uBACnDX,EAAM,WAAN,KACCA,EAAA,cAACK,MAAI,CACP,CACF","names":["ErrorBoundary","Component","err","error","info","React","CyberDashboard","__vitePreload","CyberTerminal","Loader","App","Router","Suspense","Routes","Route","Navigate","ReactDOM"],"ignoreList":[],"sources":["../../src/components/ErrorBoundary.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["// src/components/ErrorBoundary.tsx\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props { children: ReactNode }\ninterface State { hasError: boolean; error?: Error }\n\nexport class ErrorBoundary extends Component<Props, State> {\n  state: State = { hasError: false };\n\n  static getDerivedStateFromError(err: Error): State {\n    return { hasError: true, error: err };\n  }\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    console.error('ErrorBoundary caught:', error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"flex items-center justify-center h-screen text-red-500\">\n          <div>\n            <h1 className=\"text-2xl font-bold\">Something went wrong.</h1>\n            <p className=\"mt-2\">{this.state.error?.message}</p>\n          </div>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n","// src/App.tsx\nimport React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { ErrorBoundary } from './components/ErrorBoundary';\n\nconst CyberDashboard = React.lazy(() => import('./components/CyberDashboard'));\nconst CyberTerminal  = React.lazy(() => import('./components/CyberTerminal'));\n\nconst Loader = () => (\n  <div className=\"flex items-center justify-center h-screen text-lg font-semibold\">\n    Loading...\n  </div>\n);\n\nexport default function App() {\n  return (\n    <Router>\n      <ErrorBoundary>\n        <Suspense fallback={<Loader />}>\n          <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n            <Route path=\"/dashboard\" element={<CyberDashboard />} />\n            <Route path=\"/terminal\"  element={<CyberTerminal />} />\n            <Route path=\"*\" element={<div className=\"p-4\">404 - Not Found</div>} />\n          </Routes>\n        </Suspense>\n      </ErrorBoundary>\n    </Router>\n  );\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n"],"file":"assets/index-DtaxOQfX.js"}