{
  "version": 3,
  "sources": ["../../react-use-audio/dist/index.js"],
  "sourcesContent": ["var u = Object.defineProperty;\nvar d = (i, e, s) => e in i ? u(i, e, { enumerable: !0, configurable: !0, writable: !0, value: s }) : i[e] = s;\nvar t = (i, e, s) => (d(i, typeof e != \"symbol\" ? e + \"\" : e, s), s);\nimport { useRef as r, useCallback as n, useSyncExternalStore as h } from \"react\";\nclass f {\n  constructor() {\n    t(this, \"listeners\");\n    t(this, \"audioContext\");\n    t(this, \"audioBuffer\");\n    t(this, \"audioBufferSourceNode\");\n    t(this, \"snapshot\");\n    t(this, \"updateAudioData\", (e) => {\n      const s = this.snapshot.data;\n      this.snapshot = {\n        ...this.snapshot,\n        data: { ...s, ...e }\n      }, this.emitChange();\n    });\n    t(this, \"resetAudio\", () => {\n      this.updateAudioData({ isPlaying: !1, isPause: !1 });\n    });\n    t(this, \"playAudio\", () => {\n      const e = this.audioContext.createBufferSource();\n      e.buffer = this.audioBuffer, e.connect(this.audioContext.destination), e.start(), this.audioBufferSourceNode = e, this.audioBufferSourceNode.addEventListener(\"ended\", this.resetAudio);\n    });\n    t(this, \"play\", () => {\n      switch (this.audioContext.state !== \"suspended\" && !this.snapshot.data.isPause && this.audioBufferSourceNode.removeEventListener(\"ended\", this.resetAudio), this.audioContext.state) {\n        case \"closed\": {\n          this.audioContext = new AudioContext(), this.playAudio(), this.updateAudioData({\n            isPause: !1,\n            isPlaying: !0,\n            audioBufferSourceNode: this.audioBufferSourceNode\n          });\n          break;\n        }\n        case \"suspended\": {\n          this.audioContext.resume(), this.snapshot.data.isPause ? this.updateAudioData({\n            isPause: !1,\n            isPlaying: !0,\n            audioBufferSourceNode: this.audioBufferSourceNode\n          }) : (this.playAudio(), this.updateAudioData({\n            isPause: !1,\n            isPlaying: !0,\n            audioBufferSourceNode: this.audioBufferSourceNode\n          }));\n          break;\n        }\n        case \"running\": {\n          this.playAudio(), this.updateAudioData({\n            isPause: !1,\n            isPlaying: !0,\n            audioBufferSourceNode: this.audioBufferSourceNode\n          });\n          break;\n        }\n      }\n    });\n    t(this, \"stop\", () => {\n      this.audioContext.state === \"running\" && this.snapshot.data.isPlaying && this.audioBufferSourceNode.stop(), this.audioContext.state !== \"closed\" && this.audioContext.close(), this.audioBufferSourceNode.disconnect(), this.updateAudioData({ isPause: !1, isPlaying: !1 });\n    });\n    t(this, \"pause\", () => {\n      this.audioContext.state === \"running\" && this.snapshot.data.isPlaying && this.audioContext.suspend(), this.updateAudioData({\n        isPlaying: !1,\n        isPause: !0\n      });\n    });\n    t(this, \"subscribe\", (e, s) => (this.listeners.add(e), this.updateAudioData({ name: s }), fetch(s).then((o) => o.arrayBuffer()).then((o) => this.audioContext.decodeAudioData(o)).then((o) => this.audioBuffer = o).then(this.emitChange).catch((o) => console.error(o.message)), () => {\n      this.listeners.delete(e), this.audioBufferSourceNode.disconnect(), this.audioContext.state !== \"closed\" && this.audioContext.close(), this.audioContext = new AudioContext(), this.audioBufferSourceNode = this.audioContext.createBufferSource(), this.audioBuffer = null, this.updateAudioData({\n        name: \"\",\n        isPause: !1,\n        isPlaying: !1,\n        audioBufferSourceNode: this.audioBufferSourceNode\n      }), this.audioBufferSourceNode.removeEventListener(\"ended\", this.resetAudio);\n    }));\n    t(this, \"getSnapshot\", () => this.snapshot);\n    t(this, \"emitChange\", () => {\n      this.listeners.forEach((e) => e());\n    });\n    this.listeners = /* @__PURE__ */ new Set(), this.audioContext = new AudioContext(), this.audioBufferSourceNode = this.audioContext.createBufferSource(), this.audioBuffer = null, this.snapshot = {\n      data: {\n        isPlaying: !1,\n        isPause: !1,\n        name: \"\",\n        audioBufferSourceNode: this.audioBufferSourceNode\n      },\n      play: this.play,\n      stop: this.stop,\n      pause: this.pause\n    };\n  }\n}\nconst p = (i) => {\n  const e = r(null);\n  e.current === null && (e.current = new f());\n  const s = n(\n    (a) => (\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      e.current.subscribe(a, i)\n    ),\n    [i]\n  );\n  return h(\n    s,\n    e == null ? void 0 : e.current.getSnapshot\n  );\n};\nexport {\n  f as AudioController,\n  p as useAudio\n};\n"],
  "mappings": "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",
  "names": ["r", "n", "h"]
}
